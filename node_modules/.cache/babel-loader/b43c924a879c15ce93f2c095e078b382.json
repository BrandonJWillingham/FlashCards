{"ast":null,"code":"var _jsxFileName = \"/Users/brandonwillingham/Desktop/Coding/Project_Flashcards_Qualified_1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Layout from \"./Layout\";\nimport { listDecks } from \"./utils/api\";\nimport { readDeck } from \"./utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [decks, setDecks] = useState([]);\n  const [deckInfo, setDeckInfo] = useState({});\n  const [deckNumber, setDeckNumber] = useState(1);\n  const [flip, setFlip] = useState(false);\n  useEffect(() => {\n    async function loadData() {\n      listDecks().then(response => setDecks(response)).then(console.log(data));\n    }\n\n    loadData();\n  }, []);\n  useEffect(() => {\n    async function loadData() {\n      console.log(deckNumber);\n      readDeck(deckNumber).then(response => setDeckInfo(response));\n    }\n\n    loadData();\n    return () => {};\n  }, [deckNumber]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-routes\",\n    children: /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        data: decks,\n        setDecks: setDecks,\n        setDeckInfo: setDeckInfo,\n        deckInfo: deckInfo,\n        setDeckNumber: setDeckNumber,\n        flip: flip,\n        setFlip: setFlip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"A5gXhWiNX5lMdge7jME6JHJLL0U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/brandonwillingham/Desktop/Coding/Project_Flashcards_Qualified_1/src/App.js"],"names":["React","useState","useEffect","Route","Layout","listDecks","readDeck","App","decks","setDecks","deckInfo","setDeckInfo","deckNumber","setDeckNumber","flip","setFlip","loadData","then","response","console","log","data"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,aAAzB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBR,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACS,QAAD,EAAUC,WAAV,IAAyBV,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACW,UAAD,EAAYC,aAAZ,IAA6BZ,QAAQ,CAAC,CAAD,CAA3C;AACA,QAAM,CAACa,IAAD,EAAMC,OAAN,IAAiBd,QAAQ,CAAC,KAAD,CAA/B;AAGAC,EAAAA,SAAS,CAAC,MAAI;AACZ,mBAAec,QAAf,GAAyB;AACzBX,MAAAA,SAAS,GAAGY,IAAZ,CAAkBC,QAAD,IAAYT,QAAQ,CAACS,QAAD,CAArC,EAAiDD,IAAjD,CAAsDE,OAAO,CAACC,GAAR,CAAYC,IAAZ,CAAtD;AAEC;;AACDL,IAAAA,QAAQ;AACT,GANQ,EAMP,EANO,CAAT;AASAd,EAAAA,SAAS,CAAC,MAAM;AAEd,mBAAec,QAAf,GAAyB;AACvBG,MAAAA,OAAO,CAACC,GAAR,CAAYR,UAAZ;AACEN,MAAAA,QAAQ,CAACM,UAAD,CAAR,CAAqBK,IAArB,CAA2BC,QAAD,IAAaP,WAAW,CAACO,QAAD,CAAlD;AACH;;AACDF,IAAAA,QAAQ;AACR,WAAO,MAAI,CACV,CADD;AAED,GATQ,EASN,CAACJ,UAAD,CATM,CAAT;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BAGI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAEJ,KAAd;AAAqB,QAAA,QAAQ,EAAEC,QAA/B;AAAyC,QAAA,WAAW,EAAEE,WAAtD;AAAmE,QAAA,QAAQ,EAAED,QAA7E;AAAuF,QAAA,aAAa,EAAEG,aAAtG;AAAqH,QAAA,IAAI,EAAEC,IAA3H;AAAiI,QAAA,OAAO,EAAEC;AAA1I;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAxCQR,G;;KAAAA,G;AA0CT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport {useState, useEffect} from \"react\"\nimport {Route} from \"react-router-dom\";\nimport Layout from \"./Layout\";\nimport {listDecks} from \"./utils/api\"\nimport { readDeck } from \"./utils/api\";\n\n\nfunction App() {\n\n  const [decks,setDecks] = useState([]) \n  const [deckInfo,setDeckInfo] = useState({})\n  const [deckNumber,setDeckNumber] = useState(1)\n  const [flip,setFlip] = useState(false)\n\n\n  useEffect(()=>{\n    async function loadData(){\n    listDecks().then((response)=>setDecks(response)).then(console.log(data))\n\n    }\n    loadData()\n  },[])\n\n\n  useEffect(() => {\n\n    async function loadData(){\n      console.log(deckNumber)\n        readDeck(deckNumber).then((response)=> setDeckInfo(response))\n    }\n    loadData();\n    return ()=>{\n    }\n  }, [deckNumber])\n\n\n\n  return (\n    <div className=\"app-routes\">\n\n\n        <Route path=\"/\">\n          <Layout data={decks} setDecks={setDecks} setDeckInfo={setDeckInfo} deckInfo={deckInfo} setDeckNumber={setDeckNumber} flip={flip} setFlip={setFlip}/>\n        </Route>\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}