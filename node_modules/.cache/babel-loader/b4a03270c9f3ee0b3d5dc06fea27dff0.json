{"ast":null,"code":"var _jsxFileName = \"/Users/brandonwillingham/Desktop/Coding/Project_Flashcards_Qualified_1/src/Layout/DeckInfoComp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { readDeck, deleteCard, deleteDeck } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DeckInfoComp() {\n  _s();\n\n  const initialization = {\n    deck: [],\n    cards: [1, 2, 3]\n  };\n  const [deckInfo, setDeckInfo] = useState(initialization);\n  const {\n    deckId\n  } = useParams();\n  const history = useHistory();\n\n  function handleStudy() {\n    history.push(`/decks/${deckId}/study`);\n  }\n\n  function handleEditDeck() {\n    history.push(`/decks/${deckId}/edit`);\n  }\n\n  function handleDeleteDeck() {\n    if (window.confirm(\"Delete this deck?\")) {\n      deleteDeck(deckId);\n      history.push(\"/\");\n    }\n  }\n\n  function handleAddCard() {\n    history.push(`/decks/${deckId}/cards/new`);\n  }\n\n  useEffect(() => {\n    async function loadData() {\n      const response = await readDeck(deckId);\n      setDeckInfo(response);\n    }\n\n    loadData();\n  }, [deckId]);\n  const cardsMap = deckInfo.cards.map((card, index) => {\n    function handleEdit() {\n      history.push(`/decks/${card.deckId}/cards/${card.id}/edit`);\n    }\n\n    function handleDelete() {\n      if (window.confirm(\"Delete this Card?\")) {\n        deleteCard(card.id);\n        window.location.reload(true);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"  \", card.front, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", card.back, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEdit,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDelete,\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  });\n  if (deckInfo.cards[0] == 1) return \"Loading\";\n  return deckInfo ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        children: \" Home \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        children: [\"/ \", deckInfo.name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: deckInfo.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: deckInfo.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEditDeck,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStudy,\n          children: \"Study\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddCard,\n          children: \"Add Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDeleteDeck,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: cardsMap\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DeckInfoComp, \"qVE9e+oXmREHgcGKvCzk8T4o7NE=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = DeckInfoComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckInfoComp\");","map":{"version":3,"sources":["/Users/brandonwillingham/Desktop/Coding/Project_Flashcards_Qualified_1/src/Layout/DeckInfoComp.js"],"names":["React","useEffect","useState","useParams","useHistory","readDeck","deleteCard","deleteDeck","DeckInfoComp","initialization","deck","cards","deckInfo","setDeckInfo","deckId","history","handleStudy","push","handleEditDeck","handleDeleteDeck","window","confirm","handleAddCard","loadData","response","cardsMap","map","card","index","handleEdit","id","handleDelete","location","reload","front","back","name","description"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { useParams,useHistory } from \"react-router-dom\";\nimport { readDeck, deleteCard, deleteDeck } from \"../utils/api\";\n\n\nexport default function DeckInfoComp (){\n\n    const initialization = {\n        deck: [],\n        cards: [1,2,3],\n    }\n\n    const [deckInfo,setDeckInfo] = useState(initialization)\n\n\n    const {deckId} = useParams()\n    const history = useHistory()\n\n    function handleStudy(){\n        history.push(`/decks/${deckId}/study`)\n    }\n\n    function handleEditDeck(){\n        history.push(`/decks/${deckId}/edit`)\n    }\n\n    function handleDeleteDeck(){\n        if(window.confirm(\"Delete this deck?\")){\n            deleteDeck(deckId)\n            history.push(\"/\")\n        }\n    }\n\n    function handleAddCard(){\n        history.push(`/decks/${deckId}/cards/new`)\n    }\n\n    useEffect(()=>{\n\n        async function loadData(){\n            const response = await readDeck(deckId)\n            setDeckInfo(response)\n            \n        }\n\n        loadData()\n        \n    },[deckId])\n\n    const cardsMap = deckInfo.cards.map((card,index)=>{\n\n        function handleEdit(){\n            history.push(`/decks/${card.deckId}/cards/${card.id}/edit`)\n        }\n\n        function handleDelete(){\n            if(window.confirm(\"Delete this Card?\")){\n                deleteCard(card.id)\n                window.location.reload(true)\n            }\n\n        }\n\n        return(\n            <div key = {index}>\n                <div>\n                  <p>  {card.front} </p>\n                   <p> {card.back} </p>\n                </div>\n                <div>\n                    <button onClick={handleEdit}>\n                        Edit\n                    </button>\n                    <button onClick={handleDelete}>\n                        delete\n                    </button>\n                </div>\n                <hr/>\n            </div>\n        )\n\n    })\n\n    if (deckInfo.cards[0] == 1) return \"Loading\";\n\n    return (\n        deckInfo ? (\n        \n        <div>\n\n             <div>\n                <a href={\"/\"}> Home </a><a>/ {deckInfo.name} </a>\n            </div>\n\n            <div>\n                <h3>\n                    {deckInfo.name}\n                </h3>\n\n                <div>\n                    {deckInfo.description}\n                </div>\n\n                <div>\n\n                    <button onClick={handleEditDeck}>\n                        Edit\n                    </button>\n\n                    <button onClick={handleStudy}>\n                        Study\n                    </button>\n\n                    <button onClick={handleAddCard}>\n                        Add Cards\n                    </button>\n\n                    <button onClick={handleDeleteDeck}>\n                        Delete\n                    </button>\n\n                </div>\n\n                <div>\n                    <h2>\n                        Cards\n                    </h2>\n\n                    <div>\n                        {cardsMap}\n                    </div>\n                </div>\n            </div>\n\n        </div>) : (\n        <div>\n            Loading...\n        </div>\n        )\n    )\n}"]},"metadata":{},"sourceType":"module"}