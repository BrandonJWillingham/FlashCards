{"ast":null,"code":"var _jsxFileName = \"/Users/brandonwillingham/Desktop/Coding/Project_Flashcards_Qualified_1/src/Layout/Study.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api\";\nimport { Cards } from \"./Cards\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Study() {\n  _s();\n\n  const [data, setData] = useState({});\n  const decknumber = useParams();\n  useEffect(() => {\n    async function loadData() {\n      readDeck(decknumber).then(response => setData(response)).then(() => {\n        const cards = data.map((card, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Card \", index, \" of \", data.cards.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }, this);\n        });\n      });\n    }\n\n    loadData();\n  }, []);\n  console.log(data);\n  let testing = data.map((test, index) => {\n    return test, index;\n  });\n  console.log(testing);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" Study: \", data.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Study, \"k2ZrVZ0b4CTPeOTt/1CofjGpoXM=\", false, function () {\n  return [useParams];\n});\n\n_c = Study;\n\nvar _c;\n\n$RefreshReg$(_c, \"Study\");","map":{"version":3,"sources":["/Users/brandonwillingham/Desktop/Coding/Project_Flashcards_Qualified_1/src/Layout/Study.js"],"names":["React","useEffect","useState","useParams","readDeck","Cards","Study","data","setData","decknumber","loadData","then","response","cards","map","card","index","length","console","log","testing","test","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,SAAT,QAAyB,kBAAzB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAAQC,KAAR,QAAoB,SAApB;;AAEA,eAAe,SAASC,KAAT,GAAgB;AAAA;;AAC3B,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBN,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAMO,UAAU,GAAGN,SAAS,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AAEZ,mBAAeS,QAAf,GAAyB;AACrBN,MAAAA,QAAQ,CAACK,UAAD,CAAR,CACCE,IADD,CACOC,QAAD,IAAaJ,OAAO,CAACI,QAAD,CAD1B,EAECD,IAFD,CAEM,MAAI;AACN,cAAME,KAAK,GAAGN,IAAI,CAACO,GAAL,CAAS,CAACC,IAAD,EAAMC,KAAN,KAAc;AACjC,8BACI;AAAA,mCACI;AAAA,kCACUA,KADV,UACqBT,IAAI,CAACM,KAAL,CAAWI,MADhC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ;AAOH,SARa,CAAd;AASH,OAZD;AAcH;;AACDP,IAAAA,QAAQ;AAEX,GApBQ,EAoBN,EApBM,CAAT;AAsBAQ,EAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AAED,MAAIa,OAAO,GAAGb,IAAI,CAACO,GAAL,CAAS,CAACO,IAAD,EAAML,KAAN,KAAc;AACjC,WAAOK,IAAI,EAACL,KAAZ;AACH,GAFa,CAAd;AAGCE,EAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACA,sBACI;AAAA,2BACI;AAAA,6BAAab,IAAI,CAACe,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAtCuBhB,K;UAEDH,S;;;KAFCG,K","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { useParams} from \"react-router-dom\";\nimport { readDeck } from \"../utils/api\";\nimport {Cards} from \"./Cards\"\n\nexport default function Study(){\n    const [data,setData] = useState({})\n    const decknumber = useParams();\n\n    useEffect(() => {\n\n        async function loadData(){\n            readDeck(decknumber)\n            .then((response)=> setData(response))\n            .then(()=>{\n                const cards = data.map((card,index)=>{\n                    return (\n                        <div>\n                            <div>\n                                Card {index} of {data.cards.length}\n                            </div>\n                        </div>\n                    )\n                })\n            })\n\n        }\n        loadData();\n        \n    }, [])\n    \n    console.log(data)\n\n   let testing = data.map((test,index)=>{\n       return test,index\n   })\n    console.log(testing)\n    return(\n        <div>\n            <h2> Study: {data.name}</h2>\n            {/* <Cards data={data}/> */}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}