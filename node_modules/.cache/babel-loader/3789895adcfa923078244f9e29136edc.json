{"ast":null,"code":"var _jsxFileName = \"/Users/brandonwillingham/Desktop/Coding/Project_Flashcards_Qualified_1/src/Layout/DeckInfoComp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { readDeck, deleteCard } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DeckInfoComp() {\n  _s();\n\n  const [deckInfo, setDeckInfo] = useState({});\n  const {\n    deckId\n  } = useParams();\n  const history = useHistory();\n  useEffect(() => {\n    async function loadData() {\n      readDeck(deckId).then(response => setDeckInfo(response));\n    }\n\n    loadData();\n  }, [deckId]);\n\n  function cardMapping() {\n    if (!deckInfo) return \"\";\n    const cardsMap = deckInfo.cards.map((card, index) => {\n      function handleEdit() {\n        history.push(`/decks/${card.deckId}/cards/${card.id}`);\n      }\n\n      function handleDelete() {\n        if (window.confirm(\"Are you sure?\")) {\n          deleteCard(card.id);\n          window.location.reload(true);\n        }\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Front: \", card.front]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Back: \", card.back]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleEdit(),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this);\n    });\n    return cardsMap;\n  }\n\n  return deckInfo ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: deckInfo.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: deckInfo.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Study\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Add Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: cardMapping\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DeckInfoComp, \"UH1PpeBFuvMb4m1bsYMo/i/8s48=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = DeckInfoComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckInfoComp\");","map":{"version":3,"sources":["/Users/brandonwillingham/Desktop/Coding/Project_Flashcards_Qualified_1/src/Layout/DeckInfoComp.js"],"names":["React","useEffect","useState","useParams","useHistory","readDeck","deleteCard","DeckInfoComp","deckInfo","setDeckInfo","deckId","history","loadData","then","response","cardMapping","cardsMap","cards","map","card","index","handleEdit","push","id","handleDelete","window","confirm","location","reload","front","back","name","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,SAAT,EAAmBC,UAAnB,QAAqC,kBAArC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,cAArC;;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AAEnC,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBP,QAAQ,CAAC,EAAD,CAAvC;AAEA,QAAM;AAACQ,IAAAA;AAAD,MAAWP,SAAS,EAA1B;AACA,QAAMQ,OAAO,GAAGP,UAAU,EAA1B;AAEAH,EAAAA,SAAS,CAAC,MAAI;AAEV,mBAAeW,QAAf,GAAyB;AACrBP,MAAAA,QAAQ,CAACK,MAAD,CAAR,CAAiBG,IAAjB,CAAuBC,QAAD,IAAYL,WAAW,CAACK,QAAD,CAA7C;AAEH;;AAEDF,IAAAA,QAAQ;AAEX,GATQ,EASP,CAACF,MAAD,CATO,CAAT;;AAWA,WAASK,WAAT,GAAsB;AAElB,QAAI,CAACP,QAAL,EAAe,OAAO,EAAP;AAEf,UAAMQ,QAAQ,GAAGR,QAAQ,CAACS,KAAT,CAAeC,GAAf,CAAmB,CAACC,IAAD,EAAMC,KAAN,KAAc;AAE9C,eAASC,UAAT,GAAqB;AACjBV,QAAAA,OAAO,CAACW,IAAR,CAAc,UAASH,IAAI,CAACT,MAAO,UAASS,IAAI,CAACI,EAAG,EAApD;AACH;;AAED,eAASC,YAAT,GAAuB;AACnB,YAAGC,MAAM,CAACC,OAAP,CAAe,eAAf,CAAH,EAAmC;AAC/BpB,UAAAA,UAAU,CAACa,IAAI,CAACI,EAAN,CAAV;AACAE,UAAAA,MAAM,CAACE,QAAP,CAAgBC,MAAhB,CAAuB,IAAvB;AACH;AAEJ;;AAED,0BACI;AAAA,gCACI;AAAA,gCACYT,IAAI,CAACU,KADjB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA,+BACWV,IAAI,CAACW,IADhB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI;AAAA,kCACI;AAAQ,YAAA,OAAO,EAAET,UAAU,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAeI;AAAA;AAAA;AAAA;AAAA,gBAfJ;AAAA,SAAYD,KAAZ;AAAA;AAAA;AAAA;AAAA,cADJ;AAoBH,KAlCgB,CAAjB;AAoCA,WAAOJ,QAAP;AACH;;AAED,SACIR,QAAQ,gBAER;AAAA,2BACI;AAAA,8BACI;AAAA,kBACKA,QAAQ,CAACuB;AADd;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA,kBACKvB,QAAQ,CAACwB;AADd;AAAA;AAAA;AAAA;AAAA,cALJ,eASI;AAAA,gCAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eA6BI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAA,oBACCjB;AADD;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFQ,gBA4CR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UA7CJ;AAkDH;;GA/GuBR,Y;UAIHJ,S,EACDC,U;;;KALIG,Y","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { useParams,useHistory } from \"react-router-dom\";\nimport { readDeck, deleteCard } from \"../utils/api\";\n\nexport default function DeckInfoComp (){\n\n    const [deckInfo,setDeckInfo] = useState({})\n\n    const {deckId} = useParams()\n    const history = useHistory()\n\n    useEffect(()=>{\n\n        async function loadData(){\n            readDeck(deckId).then((response)=>setDeckInfo(response))\n            \n        }\n\n        loadData()\n        \n    },[deckId])\n\n    function cardMapping(){\n\n        if (!deckInfo) return \"\"\n\n        const cardsMap = deckInfo.cards.map((card,index)=>{\n\n            function handleEdit(){\n                history.push(`/decks/${card.deckId}/cards/${card.id}`)\n            }\n\n            function handleDelete(){\n                if(window.confirm(\"Are you sure?\")){\n                    deleteCard(card.id)\n                    window.location.reload(true)\n                }\n\n            }\n\n            return(\n                <div key = {index}>\n                    <div>\n                        Front: {card.front}\n                    </div>\n                    <div>\n                        Back: {card.back}\n                    </div>\n                    <div>\n                        <button onClick={handleEdit()}>\n                            Edit\n                        </button>\n                        <button>\n                            delete\n                        </button>\n                    </div>\n                    <hr/>\n                </div>\n            )\n\n        })  \n\n        return cardsMap\n    }\n\n    return (\n        deckInfo ? (\n        \n        <div>\n            <div>\n                <h3>\n                    {deckInfo.name}\n                </h3>\n\n                <div>\n                    {deckInfo.description}\n                </div>\n\n                <div>\n\n                    <button>\n                        Edit\n                    </button>\n\n                    <button>\n                        Study\n                    </button>\n\n                    <button>\n                        Add Cards\n                    </button>\n\n                    <button>\n                        Delete\n                    </button>\n\n                </div>\n\n                <div>\n                    <h2>\n                        Cards\n                    </h2>\n\n                    <div>\n                    {cardMapping}\n                    </div>\n                </div>\n            </div>\n\n        </div>) : (\n        <div>\n            Loading...\n        </div>\n        )\n    )\n}"]},"metadata":{},"sourceType":"module"}