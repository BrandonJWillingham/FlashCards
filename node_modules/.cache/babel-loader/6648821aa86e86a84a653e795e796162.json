{"ast":null,"code":"var _jsxFileName = \"/Users/brandonwillingham/Desktop/Coding/Project_Flashcards_Qualified_1/src/Layout/Cards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Cards(_ref) {\n  _s();\n\n  let {\n    data,\n    flip,\n    setFlip\n  } = _ref;\n  const [currentCard, setCurrentCard] = useState(0);\n  const history = useHistory();\n\n  function flipping() {\n    setFlip(!flip);\n  }\n\n  function next() {\n    if (currentCard === data.length - 1) if (!window.confirm(\"Restart Cards?\")) {\n      setCurrentCard(currentCard => currentCard = 0);\n      console.log(currentCard);\n    } else {\n      history.push(\"/\");\n    }\n    setFlip(false);\n    setCurrentCard(currentCard + 1);\n    setCurrentCard(currentCard => Math.min(currentCard, data.length - 1));\n  }\n\n  const returning = data.map((card, index) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Card \", index + 1, \" of \", data.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), flip ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: card.front\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 26\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: card.back\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 53\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => flipping(),\n        children: \"Flip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), flip && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => next(),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 26\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  });\n  return returning[currentCard];\n}\n\n_s(Cards, \"r2HRe/dGGUfsTcnZxmHS08ynPn0=\", false, function () {\n  return [useHistory];\n});\n\n_c = Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["/Users/brandonwillingham/Desktop/Coding/Project_Flashcards_Qualified_1/src/Layout/Cards.js"],"names":["React","useState","useHistory","Cards","data","flip","setFlip","currentCard","setCurrentCard","history","flipping","next","length","window","confirm","console","log","push","Math","min","returning","map","card","index","front","back"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;;AAEA,OAAO,SAASC,KAAT,OAAqC;AAAA;;AAAA,MAArB;AAACC,IAAAA,IAAD;AAAOC,IAAAA,IAAP;AAAYC,IAAAA;AAAZ,GAAqB;AAExC,QAAM,CAACC,WAAD,EAAaC,cAAb,IAA+BP,QAAQ,CAAC,CAAD,CAA7C;AACA,QAAMQ,OAAO,GAAGP,UAAU,EAA1B;;AAEA,WAASQ,QAAT,GAAmB;AACnBJ,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACC;;AAED,WAASM,IAAT,GAAe;AACX,QAAIJ,WAAW,KAAKH,IAAI,CAACQ,MAAL,GAAc,CAAlC,EAAqC,IAAG,CAACC,MAAM,CAACC,OAAP,CAAe,gBAAf,CAAJ,EAAqC;AACtEN,MAAAA,cAAc,CAAED,WAAD,IAAeA,WAAW,GAAC,CAA5B,CAAd;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,WAAZ;AACH,KAHoC,MAGhC;AACDE,MAAAA,OAAO,CAACQ,IAAR,CAAa,GAAb;AACH;AACDX,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAE,IAAAA,cAAc,CAACD,WAAW,GAAC,CAAb,CAAd;AACAC,IAAAA,cAAc,CAAED,WAAD,IAAgBW,IAAI,CAACC,GAAL,CAASZ,WAAT,EAAqBH,IAAI,CAACQ,MAAL,GAAY,CAAjC,CAAjB,CAAd;AAEH;;AAED,QAAMQ,SAAS,GAAGhB,IAAI,CAACiB,GAAL,CAAS,CAACC,IAAD,EAAMC,KAAN,KAAc;AAErC,wBACI;AAAA,8BACI;AAAA,4BACUA,KAAK,GAAC,CADhB,UACuBnB,IAAI,CAACQ,MAD5B;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAIKP,IAAI,gBAAI;AAAA,kBAAMiB,IAAI,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,cAAJ,gBAA+B;AAAA,kBAAMF,IAAI,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,cAJxC,eAKI;AAAQ,QAAA,OAAO,EAAE,MAAIf,QAAQ,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,EAMKL,IAAI,iBAAI;AAAQ,QAAA,OAAO,EAAE,MAAKM,IAAI,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANb;AAAA,OAAWY,KAAX;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH,GAZiB,CAAlB;AAcA,SAAOH,SAAS,CAACb,WAAD,CAAhB;AACH;;GArCeJ,K;UAGID,U;;;KAHJC,K","sourcesContent":["import React,{useState} from \"react\";\nimport {useHistory} from \"react-router-dom\"\n\nexport function Cards ({data, flip,setFlip}){\n\n    const [currentCard,setCurrentCard] = useState(0)\n    const history = useHistory()\n\n    function flipping(){\n    setFlip(!flip)\n    }\n\n    function next(){\n        if (currentCard === data.length - 1) if(!window.confirm(\"Restart Cards?\")){\n            setCurrentCard((currentCard)=>currentCard=0)\n            console.log(currentCard)\n        }else{\n            history.push(\"/\")\n        }\n        setFlip(false)\n        setCurrentCard(currentCard+1)\n        setCurrentCard((currentCard)=> Math.min(currentCard,data.length-1))\n\n    }\n\n    const returning = data.map((card,index)=>{\n\n        return (\n            <div key ={index}> \n                <div>\n                    Card {index+1} of {data.length} \n                </div>\n                {flip ? (<div>{card.front}</div>) :(<div>{card.back}</div>)} \n                <button onClick={()=>flipping()}>Flip</button>\n                {flip && <button onClick={()=> next() }>Next</button>}\n            </div>\n        )\n    })\n\n    return returning[currentCard]\n}"]},"metadata":{},"sourceType":"module"}