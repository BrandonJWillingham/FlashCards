{"ast":null,"code":"var _jsxFileName = \"/Users/brandonwillingham/Desktop/Coding/Project_Flashcards_Qualified_1/src/Layout/DeckInfoComp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { readDeck, deleteCard } from \"../utils/api\";\nimport CardMapping from \"./CardMapping\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DeckInfoComp() {\n  _s();\n\n  const [deckInfo, setDeckInfo] = useState({});\n  let cardsMap;\n  const {\n    deckId\n  } = useParams();\n  const history = useHistory();\n  useEffect(() => {\n    async function loadData() {\n      const response = await readDeck(deckId);\n      console.log(\"in useEffect\", response);\n      setDeckInfo(response);\n      cardsMap = deckInfo.cards.map((card, index) => {\n        function handleEdit() {\n          history.push(`/decks/${card.deckId}/cards/${card.id}`);\n        }\n\n        function handleDelete() {\n          if (window.confirm(\"Are you sure?\")) {\n            deleteCard(card.id);\n            window.location.reload(true);\n          }\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Front: \", card.front]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Back: \", card.back]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleEdit,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleDelete,\n              children: \"delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this);\n      });\n    }\n\n    loadData();\n  }, [deckId]); // console.log(deckInfo.cards)\n  // cardsMap = deckInfo.cards.map((card,index)=>{\n  //     function handleEdit(){\n  //         history.push(`/decks/${card.deckId}/cards/${card.id}`)\n  //     }\n  //     function handleDelete(){\n  //         if(window.confirm(\"Are you sure?\")){\n  //             deleteCard(card.id)\n  //             window.location.reload(true)\n  //         }\n  //     }\n  //     return(\n  //         <div key = {index}>\n  //             <div>\n  //                 Front: {card.front}\n  //             </div>\n  //             <div>\n  //                 Back: {card.back}\n  //             </div>\n  //             <div>\n  //                 <button onClick={handleEdit}>\n  //                     Edit\n  //                 </button>\n  //                 <button onClick={handleDelete}>\n  //                     delete\n  //                 </button>\n  //             </div>\n  //             <hr/>\n  //         </div>\n  //     )\n  // })\n\n  return deckInfo ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: deckInfo.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: deckInfo.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Study\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Add Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: cardsMap\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DeckInfoComp, \"UH1PpeBFuvMb4m1bsYMo/i/8s48=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = DeckInfoComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckInfoComp\");","map":{"version":3,"sources":["/Users/brandonwillingham/Desktop/Coding/Project_Flashcards_Qualified_1/src/Layout/DeckInfoComp.js"],"names":["React","useEffect","useState","useParams","useHistory","readDeck","deleteCard","CardMapping","DeckInfoComp","deckInfo","setDeckInfo","cardsMap","deckId","history","loadData","response","console","log","cards","map","card","index","handleEdit","push","id","handleDelete","window","confirm","location","reload","front","back","name","description"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { useParams,useHistory } from \"react-router-dom\";\nimport { readDeck, deleteCard } from \"../utils/api\";\nimport CardMapping from \"./CardMapping\";\n\nexport default function DeckInfoComp (){\n\n    const [deckInfo,setDeckInfo] = useState({})\n\n    let cardsMap\n\n    const {deckId} = useParams()\n    const history = useHistory()\n\n    useEffect(()=>{\n\n        async function loadData(){\n            const response = await readDeck(deckId)\n            console.log(\"in useEffect\",response)\n            setDeckInfo(response)\n\n            cardsMap = deckInfo.cards.map((card,index)=>{\n\n                function handleEdit(){\n                    history.push(`/decks/${card.deckId}/cards/${card.id}`)\n                }\n        \n                function handleDelete(){\n                    if(window.confirm(\"Are you sure?\")){\n                        deleteCard(card.id)\n                        window.location.reload(true)\n                    }\n        \n                }\n        \n                return(\n                    <div key = {index}>\n                        <div>\n                            Front: {card.front}\n                        </div>\n                        <div>\n                            Back: {card.back}\n                        </div>\n                        <div>\n                            <button onClick={handleEdit}>\n                                Edit\n                            </button>\n                            <button onClick={handleDelete}>\n                                delete\n                            </button>\n                        </div>\n                        <hr/>\n                    </div>\n                )\n        \n            })\n        }\n\n        loadData()\n        \n    },[deckId])\n\n    // console.log(deckInfo.cards)\n    // cardsMap = deckInfo.cards.map((card,index)=>{\n\n    //     function handleEdit(){\n    //         history.push(`/decks/${card.deckId}/cards/${card.id}`)\n    //     }\n\n    //     function handleDelete(){\n    //         if(window.confirm(\"Are you sure?\")){\n    //             deleteCard(card.id)\n    //             window.location.reload(true)\n    //         }\n\n    //     }\n\n    //     return(\n    //         <div key = {index}>\n    //             <div>\n    //                 Front: {card.front}\n    //             </div>\n    //             <div>\n    //                 Back: {card.back}\n    //             </div>\n    //             <div>\n    //                 <button onClick={handleEdit}>\n    //                     Edit\n    //                 </button>\n    //                 <button onClick={handleDelete}>\n    //                     delete\n    //                 </button>\n    //             </div>\n    //             <hr/>\n    //         </div>\n    //     )\n\n    // })\n\n    return (\n        deckInfo ? (\n        \n        <div>\n            <div>\n                <h3>\n                    {deckInfo.name}\n                </h3>\n\n                <div>\n                    {deckInfo.description}\n                </div>\n\n                <div>\n\n                    <button>\n                        Edit\n                    </button>\n\n                    <button>\n                        Study\n                    </button>\n\n                    <button>\n                        Add Cards\n                    </button>\n\n                    <button>\n                        Delete\n                    </button>\n\n                </div>\n\n                <div>\n                    <h2>\n                        Cards\n                    </h2>\n\n                    <div>\n                        {cardsMap}\n                    {/* <CardMapping deckInfo = {deckInfo}/> */}\n                    </div>\n                </div>\n            </div>\n\n        </div>) : (\n        <div>\n            Loading...\n        </div>\n        )\n    )\n}"]},"metadata":{},"sourceType":"module"}