{"ast":null,"code":"var _jsxFileName = \"/Users/brandonwillingham/Desktop/Coding/Project_Flashcards_Qualified_1/src/Layout/EditDeck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport { readDeck, updateDeck } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditDeck() {\n  _s();\n\n  const history = useHistory();\n  const [deck, setDeck] = useState({});\n  const {\n    deckId\n  } = useParams();\n  console.log(params.deckId);\n  useEffect(() => {\n    async function loadData() {\n      readDeck(deckId).then(response => setDeck(response));\n    }\n\n    loadData();\n  }, []);\n\n  function handleChange(_ref) {\n    let {\n      target\n    } = _ref;\n    setDeck({ ...deck,\n      [target.name]: target.value\n    });\n  }\n\n  function handleSave() {\n    updateDeck(deck);\n  }\n\n  function handleDone() {\n    history.push(`/decks/${deckId}`);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \" Home \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        children: [\"/ \", deck.name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 45\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: deck.name,\n            name: \"name\",\n            id: \"name\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: deck.description,\n          name: \"description\",\n          id: \"description\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDone,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditDeck, \"JL1pwB9eYWopvANNeymDGfcQp8g=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = EditDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDeck\");","map":{"version":3,"sources":["/Users/brandonwillingham/Desktop/Coding/Project_Flashcards_Qualified_1/src/Layout/EditDeck.js"],"names":["React","useEffect","useState","useParams","Link","useHistory","readDeck","updateDeck","EditDeck","history","deck","setDeck","deckId","console","log","params","loadData","then","response","handleChange","target","name","value","handleSave","handleDone","push","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAASC,SAAT,EAAmBC,IAAnB,EAAwBC,UAAxB,QAA0C,kBAA1C;AACA,SAASC,QAAT,EAAkBC,UAAlB,QAAoC,cAApC;;AAEA,eAAe,SAASC,QAAT,GAAmB;AAAA;;AAE9B,QAAMC,OAAO,GAAGJ,UAAU,EAA1B;AACA,QAAM,CAACK,IAAD,EAAMC,OAAN,IAAiBT,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM;AAACU,IAAAA;AAAD,MAAWT,SAAS,EAA1B;AAEAU,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACH,MAAnB;AAEAX,EAAAA,SAAS,CAAC,MAAI;AAEV,mBAAee,QAAf,GAAyB;AACrBV,MAAAA,QAAQ,CAACM,MAAD,CAAR,CAAiBK,IAAjB,CAAuBC,QAAD,IAAYP,OAAO,CAACO,QAAD,CAAzC;AACH;;AAEDF,IAAAA,QAAQ;AACX,GAPQ,EAON,EAPM,CAAT;;AASA,WAASG,YAAT,OAA+B;AAAA,QAAT;AAACC,MAAAA;AAAD,KAAS;AAC3BT,IAAAA,OAAO,CAAC,EACJ,GAAGD,IADC;AAEJ,OAACU,MAAM,CAACC,IAAR,GAAeD,MAAM,CAACE;AAFlB,KAAD,CAAP;AAIH;;AAED,WAASC,UAAT,GAAsB;AAClBhB,IAAAA,UAAU,CAACG,IAAD,CAAV;AACH;;AAED,WAASc,UAAT,GAAqB;AACjBf,IAAAA,OAAO,CAACgB,IAAR,CAAc,UAASb,MAAO,EAA9B;AACH;;AAED,sBACI;AAAA,4BACI;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAE,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eACgC,QAAC,IAAD;AAAA,yBAASF,IAAI,CAACW,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA,cADhC;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eASI;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAA,iCACI;AACA,YAAA,KAAK,EAAIX,IAAI,CAACW,IADd;AAEA,YAAA,IAAI,EAAG,MAFP;AAGA,YAAA,EAAE,EAAG,MAHL;AAIA,YAAA,QAAQ,EAAIF;AAJZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAgBI;AAAA,+CAGI;AACA,UAAA,KAAK,EAAIT,IAAI,CAACgB,WADd;AAEA,UAAA,IAAI,EAAG,aAFP;AAGA,UAAA,EAAE,EAAG,aAHL;AAIA,UAAA,QAAQ,EAAIP;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAsCI;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAEK,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAED,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAtCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6CH;;GA7EuBf,Q;UAEJH,U,EAECF,S;;;KAJGK,Q","sourcesContent":["import React,{useEffect, useState} from \"react\";\nimport { useParams,Link,useHistory } from \"react-router-dom\";\nimport { readDeck,updateDeck } from \"../utils/api\";\n\nexport default function EditDeck(){\n\n    const history = useHistory()\n    const [deck,setDeck] = useState({})\n    const {deckId} = useParams();\n\n    console.log(params.deckId)\n\n    useEffect(()=>{\n        \n        async function loadData(){\n            readDeck(deckId).then((response)=>setDeck(response))\n        }\n\n        loadData();\n    }, [])\n\n    function handleChange({target}){\n        setDeck({\n            ...deck,\n            [target.name]: target.value,\n        })\n    }\n    \n    function handleSave (){\n        updateDeck(deck)\n    }\n\n    function handleDone(){\n        history.push(`/decks/${deckId}`)\n    }\n\n    return (\n        <div>\n            <div>\n                <Link to={\"/\"}> Home </Link><Link>/ {deck.name} </Link>\n            </div>\n\n            <h2>\n                Edit Deck\n            </h2>\n\n            <form>\n                <label htmlFor=\"name\">\n                    <div>\n                        Name\n                    </div>\n\n                    <div>\n                        <textarea \n                        value = {deck.name}\n                        name = \"name\"\n                        id = \"name\"\n                        onChange = {handleChange}\n                        />\n                    </div>\n                </label>\n\n                <label>\n                    Description\n\n                    <textarea\n                    value = {deck.description}\n                    name = \"description\"\n                    id = \"description\"\n                    onChange = {handleChange}\n                    />\n\n                </label>\n            </form>\n\n            <div>\n                <button onClick={handleDone}>Done</button>\n                <button onClick={handleSave}>Save</button>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}