{"ast":null,"code":"var _jsxFileName = \"/Users/brandonwillingham/Desktop/Coding/Project_Flashcards_Qualified_1/src/Layout/EditCards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { readDeck, readCard } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditCards() {\n  _s();\n\n  const [card, setCard] = useState({});\n  const [deck, setDeck] = useState({});\n  const params = useParams();\n  useEffect(() => {\n    async function loadData() {\n      readDeck(params.deckId).then(response => setDeck(response));\n    }\n\n    loadData();\n  }, [params]);\n  useEffect(() => {\n    async function loadData() {\n      readCard(params.cardId).then(response => setCard(response));\n    }\n\n    loadData();\n  }, [params]);\n\n  function handleChange(_ref) {\n    let {\n      target\n    } = _ref;\n    setCard({ ...card,\n      [target.name]: target.value\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \" Home \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        children: [\"/ \", deck.name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 45\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"front\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Front:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: card.front,\n            name: \"front\",\n            id: \"front\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"back\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: card.back,\n            name: \"back\",\n            id: \"back\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditCards, \"GdyRJ1WP2NNai/7Llyc6tRpwUYA=\", false, function () {\n  return [useParams];\n});\n\n_c = EditCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCards\");","map":{"version":3,"sources":["/Users/brandonwillingham/Desktop/Coding/Project_Flashcards_Qualified_1/src/Layout/EditCards.js"],"names":["React","useState","useEffect","useParams","Link","readDeck","readCard","EditCards","card","setCard","deck","setDeck","params","loadData","deckId","then","response","cardId","handleChange","target","name","value","front","back"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAASC,SAAT,EAAmBC,IAAnB,QAA+B,kBAA/B;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,cAAnC;;AAEA,eAAe,SAASC,SAAT,GAAoB;AAAA;;AAG/B,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBR,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAO,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAjC;AAEA,QAAMW,MAAM,GAAGT,SAAS,EAAxB;AAEAD,EAAAA,SAAS,CAAC,MAAI;AAEV,mBAAeW,QAAf,GAAyB;AACrBR,MAAAA,QAAQ,CAACO,MAAM,CAACE,MAAR,CAAR,CAAwBC,IAAxB,CAA8BC,QAAD,IAAYL,OAAO,CAACK,QAAD,CAAhD;AACH;;AACDH,IAAAA,QAAQ;AACX,GANQ,EAMP,CAACD,MAAD,CANO,CAAT;AAQAV,EAAAA,SAAS,CAAC,MAAI;AAEV,mBAAeW,QAAf,GAAyB;AACrBP,MAAAA,QAAQ,CAACM,MAAM,CAACK,MAAR,CAAR,CAAwBF,IAAxB,CAA8BC,QAAD,IAAYP,OAAO,CAACO,QAAD,CAAhD;AACH;;AACDH,IAAAA,QAAQ;AACX,GANQ,EAMP,CAACD,MAAD,CANO,CAAT;;AAQA,WAASM,YAAT,OAA+B;AAAA,QAAT;AAACC,MAAAA;AAAD,KAAS;AAC3BV,IAAAA,OAAO,CAAC,EACJ,GAAGD,IADC;AAEJ,OAACW,MAAM,CAACC,IAAR,GAAgBD,MAAM,CAACE;AAFnB,KAAD,CAAP;AAIH;;AAED,sBACI;AAAA,4BACI;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAE,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eACgC,QAAC,IAAD;AAAA,yBAASX,IAAI,CAACU,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA,cADhC;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eASI;AAAA,6BACI;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AACI,YAAA,KAAK,EAAGZ,IAAI,CAACc,KADjB;AAEI,YAAA,IAAI,EAAG,OAFX;AAGI,YAAA,EAAE,EAAG,OAHT;AAII,YAAA,QAAQ,EAAIJ;AAJhB;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAYI;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AACI,YAAA,KAAK,EAAIV,IAAI,CAACe,IADlB;AAEI,YAAA,IAAI,EAAG,MAFX;AAGI,YAAA,EAAE,EAAG,MAHT;AAII,YAAA,QAAQ,EAAIL;AAJhB;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCH;;GArEuBX,S;UAMLJ,S;;;KANKI,S","sourcesContent":["import React, {useState,useEffect} from \"react\";\nimport { useParams,Link } from \"react-router-dom\";\nimport { readDeck, readCard } from \"../utils/api\";\n\nexport default function EditCards(){\n\n\n    const [card,setCard ]= useState({})\n    const  [deck, setDeck] = useState({})\n\n    const params = useParams()\n\n    useEffect(()=>{\n\n        async function loadData(){\n            readDeck(params.deckId).then((response)=>setDeck(response))\n        }\n        loadData()\n    },[params])\n\n    useEffect(()=>{\n\n        async function loadData(){\n            readCard(params.cardId).then((response)=>setCard(response))\n        }\n        loadData()\n    },[params])\n\n    function handleChange({target}){\n        setCard({\n            ...card,\n            [target.name] : target.value\n        })\n    }\n\n    return (\n        <div>\n            <div>\n                <Link to={\"/\"}> Home </Link><Link>/ {deck.name} </Link>\n            </div>\n\n            <h2>\n                Edit Cards\n            </h2>\n\n            <div>\n                <form>\n                    <label htmlFor=\"front\">\n                        <div>\n                            Front: \n                        </div>\n                        <textarea\n                            value ={card.front}\n                            name = \"front\"\n                            id = \"front\"\n                            onChange = {handleChange}\n                        />\n                    </label>\n                    <label htmlFor=\"back\">\n                        <div>\n                            Back\n                        </div>\n                        <textarea\n                            value = {card.back}\n                            name = \"back\"\n                            id = \"back\"\n                            onChange = {handleChange}\n                        />\n                    </label>\n                </form>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}